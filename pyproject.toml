[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "deadline-cloud-test-fixtures"
dynamic = ["version"]
requires-python = ">=3.7"

dependencies = [
  "boto3 ~= 1.26",
]

[project.entry-points.pytest11]
deadline_test_fixtures = "deadline_test_fixtures.fixtures"

[tool.hatch.build]
artifacts = [
  "*_version.py",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "post-release"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.build.hooks.custom]
path = "hatch_version_hook.py"

[[tool.hatch.build.hooks.custom.copy_map]]
sources = [
  "_version.py",
]
destinations = [
  "src/deadline_test_fixtures",
]

[tool.hatch.build.targets.sdist]
include = [
  "src/*",
  "hatch_version_hook.py",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/deadline_test_fixtures"
]

[tool.mypy]
check_untyped_defs = true
show_error_codes = true
pretty = true
files = [ "src/**/*.py" ]

[[tool.mypy.overrides]]
module = [
  "boto3",
  "botocore.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "moto"
ignore_missing_imports = true

[tool.ruff]
ignore = [
  "E501",
]
line-length = 100

[tool.ruff.isort]
known-first-party = [
  "deadline_test_fixtures"
]

[tool.black]
line-length = 100

[tool.pytest.ini_options]
xfail_strict = true
addopts = [
  "--durations=5",
  "--cov=src/deadline_test_fixtures",
  "--color=yes",
  "--cov-report=html:build/coverage",
  "--cov-report=xml:build/coverage/coverage.xml",
  "--cov-report=term-missing",
  "--numprocesses=auto",
]
testpaths = [ "test" ]
looponfailroots = [
  "src",
  "test",
]
# looponfailroots is deprecated, this removes the deprecation from the test output
filterwarnings = [
  "ignore::DeprecationWarning"
]

[tool.coverage.run]
source_pkgs = [ "deadline_test_fixtures" ]
omit = [
  "models.py",
  "fixtures.py",
  "deadline/stubs.py",
]


[tool.coverage.paths]
source = [
  "src/"
]

[tool.coverage.report]
show_missing = true
